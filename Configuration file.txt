## Medical Emergency Scenario settings

Scenario.name = medical_emergency_scenario
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43200s == 12h
Scenario.endTime = 36500

## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second)
# transmitRange : range of the interface (meters)

# "WiFi Interface" for all nodes
wifiInterface.type = SimpleBroadcastInterface
wifiInterface.transmitSpeed = 8.5M
wifiInterface.transmitRange = 60



#######################################################################

# Define 5 different node groups
Scenario.nrofHostGroups = 5

# Common settings for all groups

Group.router = EpidemicRouter
#Group.router = SprayAndWaitRouter
#SprayAndWaitRouter.nrofCopies = 6
#SprayAndWaitRouter.binaryMode = true

#######

Group.bufferSize = 5M
Group.waitTime = 0, 120
# All nodes have the Wi Fi interface
Group.interface1 = wifiInterface
Group.nrofInterfaces = 1
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 250
Group.nrofHosts = 35


## Group 1 specific settings: Single Patient Node (static node)
Group1.groupID = P
Group1.nrofHosts = 1
Group1.movementModel = StationaryMovement
Group1.nodeLocation = 1000, 1000 


## Group 2 specific settings: Health Workers Node
Group2.groupID = Hw
Group2.nrofHosts = 10
Group2.movementModel = ShortestPathMapBasedMovement
Group.speed = 1, 3.5


## Group 3 specific settings: Travellers Node
Group3.groupID = t
Group3.nrofHosts = 8
Group3.movementModel = RandomWaypoint
Group3.speed = 0.5, 3



## Group 4 specific settings: Vehicles Node
Group4.groupID = v
Group4.nrofHosts = 15
Group4.movementModel = MapBasedMovement
Group2.okMaps = 2
Group.speed = 1, 10



## Group 5 specific settings: Health Center Node (static point)
Group5.groupID = Hc
Group5.nrofHosts = 1
Group5.movementModel = StationaryMovement
Group5.nodeLocation = 2000, 2600



##########################################################################

## Message creation parameters

# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 25,45
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# range of message source/destination addresses
Events1.hosts = 0,10
Events1.tohosts =34,36
# Message ID prefix
Events1.prefix = M

##########################################################################

## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 4500, 3400
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 4

MapBasedMovement.mapFile1 = data/roads.wkt
MapBasedMovement.mapFile2 = data/main_roads.wkt
MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt
MapBasedMovement.mapFile4 = data/shops.wkt


## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 2
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = MessageStatsReport
Report.report2 = ContactTimesReport

## Default settings for some routers settings
#SprayAndWaitRouter.nrofCopies = 6
#SprayAndWaitRouter.binaryMode = true
#ProphetRouter.secondsInTimeUnit = 30


## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 3
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
